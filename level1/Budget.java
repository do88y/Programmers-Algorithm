package level1;

import java.util.Arrays;

public class Budget {
    //S사에서는 각 부서에 필요한 물품을 지원해 주기 위해 부서별로 물품을 구매하는데 필요한 금액을 조사했습니다. 
    // 그러나, 전체 예산이 정해져 있기 때문에 모든 부서의 물품을 구매해 줄 수는 없습니다.
    // 그래서 최대한 많은 부서의 물품을 구매해 줄 수 있도록 하려고 합니다.
    //물품을 구매해 줄 때는 각 부서가 신청한 금액만큼을 모두 지원해 줘야 합니다.
    // 예를 들어 1,000원을 신청한 부서에는 정확히 1,000원을 지원해야 하며, 1,000원보다 적은 금액을 지원해 줄 수는 없습니다.
    //부서별로 신청한 금액이 들어있는 배열 d와 예산 budget이 매개변수로 주어질 때,
    // 최대 몇 개의 부서에 물품을 지원할 수 있는지 return 하도록 solution 함수를 완성해주세요.
    public int solution(int[] d, int budget) {
        int answer = 0;
        int sum = 0;

        Arrays.sort(d);
        for (int i=0; i<d.length; i++) {
            sum += d[i];
            if(sum > budget)    break;
            answer ++;
        }

        return answer;
    }
    //느낀점: 긍정적인 점은 Arrays.sort() 메서드를 고민하며 버벅이지 않고 물흐르듯 자연스럽고 능숙하게 사용했다는 것.
    //아주 사소하지만 내가 좋아하는 포인트인 성실한 노력에 따른 결과가 보이는 부분이라 기뻤다.
    //저번주 까지만 해도 문제가 너무 안 풀려 오랜시간 붙들고 있어야 해서 지긋지긋하게 느껴지고 자괴감까지 들었는데
    //한번 멘탈을 회복하고 나니 문제도 더 잘 풀리는 것 같은 기분이었다.
    //이번에는 문제가 간단하기도 했지만 빠른 시간에 풀 수 있던 이유가 문제 접근법을 빨리 파악했기 때문인 것 같다.
    //그냥 이렇게 쉬운 문제부터 차근차근 조급하지 않고 풀어나가야겠다. (코드보다 말이 더 김)
}
